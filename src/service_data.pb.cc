// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_data.proto

#include "service_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_service_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_service_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_service_5fdata_2eproto
namespace ServiceData {
class TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timestamp>
      _instance;
} _Timestamp_default_instance_;
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class UserFollowingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserFollowingList>
      _instance;
} _UserFollowingList_default_instance_;
class UserChirpListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserChirpList>
      _instance;
} _UserChirpList_default_instance_;
class ChirpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Chirp>
      _instance;
} _Chirp_default_instance_;
class NowChirpIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NowChirpId>
      _instance;
} _NowChirpId_default_instance_;
}  // namespace ServiceData
namespace protobuf_service_5fdata_2eproto {
static void InitDefaultsTimestamp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServiceData::_Timestamp_default_instance_;
    new (ptr) ::ServiceData::Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceData::Timestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimestamp}, {}};

static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServiceData::_User_default_instance_;
    new (ptr) ::ServiceData::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceData::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUser}, {
      &protobuf_service_5fdata_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsUserFollowingList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServiceData::_UserFollowingList_default_instance_;
    new (ptr) ::ServiceData::UserFollowingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceData::UserFollowingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserFollowingList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserFollowingList}, {}};

static void InitDefaultsUserChirpList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServiceData::_UserChirpList_default_instance_;
    new (ptr) ::ServiceData::UserChirpList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceData::UserChirpList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserChirpList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserChirpList}, {}};

static void InitDefaultsChirp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServiceData::_Chirp_default_instance_;
    new (ptr) ::ServiceData::Chirp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceData::Chirp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Chirp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChirp}, {
      &protobuf_service_5fdata_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsNowChirpId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ServiceData::_NowChirpId_default_instance_;
    new (ptr) ::ServiceData::NowChirpId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServiceData::NowChirpId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NowChirpId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNowChirpId}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Timestamp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserFollowingList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserChirpList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Chirp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NowChirpId.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Timestamp, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Timestamp, useconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::User, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::User, last_update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::UserFollowingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::UserFollowingList, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::UserChirpList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::UserChirpList, chirp_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::Chirp, children_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::NowChirpId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServiceData::NowChirpId, now_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ServiceData::Timestamp)},
  { 7, -1, sizeof(::ServiceData::User)},
  { 14, -1, sizeof(::ServiceData::UserFollowingList)},
  { 20, -1, sizeof(::ServiceData::UserChirpList)},
  { 26, -1, sizeof(::ServiceData::Chirp)},
  { 37, -1, sizeof(::ServiceData::NowChirpId)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServiceData::_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServiceData::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServiceData::_UserFollowingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServiceData::_UserChirpList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServiceData::_Chirp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServiceData::_NowChirpId_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "service_data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022service_data.proto\022\013ServiceData\".\n\tTim"
      "estamp\022\017\n\007seconds\030\001 \001(\003\022\020\n\010useconds\030\002 \001("
      "\003\"E\n\004User\022\020\n\010username\030\001 \001(\t\022+\n\013last_upda"
      "te\030\002 \001(\0132\026.ServiceData.Timestamp\"%\n\021User"
      "FollowingList\022\020\n\010username\030\001 \003(\t\"!\n\rUserC"
      "hirpList\022\020\n\010chirp_id\030\001 \003(\004\"\202\001\n\005Chirp\022\n\n\002"
      "id\030\001 \001(\004\022\020\n\010username\030\002 \001(\t\022\021\n\tparent_id\030"
      "\003 \001(\004\022\014\n\004text\030\004 \001(\t\022$\n\004time\030\005 \001(\0132\026.Serv"
      "iceData.Timestamp\022\024\n\014children_ids\030\006 \003(\004\""
      "\034\n\nNowChirpId\022\016\n\006now_id\030\001 \001(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 397);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service_data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_service_5fdata_2eproto
namespace ServiceData {

// ===================================================================

void Timestamp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kSecondsFieldNumber;
const int Timestamp::kUsecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fdata_2eproto::scc_info_Timestamp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceData.Timestamp)
}
Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&useconds_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(useconds_));
  // @@protoc_insertion_point(copy_constructor:ServiceData.Timestamp)
}

void Timestamp::SharedCtor() {
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&useconds_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(useconds_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:ServiceData.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
}

void Timestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Timestamp::descriptor() {
  ::protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timestamp& Timestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fdata_2eproto::scc_info_Timestamp.base);
  return *internal_default_instance();
}


void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceData.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&useconds_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(useconds_));
  _internal_metadata_.Clear();
}

bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceData.Timestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 useconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &useconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceData.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceData.Timestamp)
  return false;
#undef DO_
}

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceData.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // int64 useconds = 2;
  if (this->useconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->useconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceData.Timestamp)
}

::google::protobuf::uint8* Timestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceData.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seconds(), target);
  }

  // int64 useconds = 2;
  if (this->useconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->useconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceData.Timestamp)
  return target;
}

size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceData.Timestamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 seconds = 1;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());
  }

  // int64 useconds = 2;
  if (this->useconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->useconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceData.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Timestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceData.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceData.Timestamp)
    MergeFrom(*source);
  }
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceData.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.useconds() != 0) {
    set_useconds(from.useconds());
  }
}

void Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceData.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceData.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {
  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  using std::swap;
  swap(seconds_, other->seconds_);
  swap(useconds_, other->useconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void User::InitAsDefaultInstance() {
  ::ServiceData::_User_default_instance_._instance.get_mutable()->last_update_ = const_cast< ::ServiceData::Timestamp*>(
      ::ServiceData::Timestamp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUsernameFieldNumber;
const int User::kLastUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fdata_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceData.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_last_update()) {
    last_update_ = new ::ServiceData::Timestamp(*from.last_update_);
  } else {
    last_update_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ServiceData.User)
}

void User::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_update_ = NULL;
}

User::~User() {
  // @@protoc_insertion_point(destructor:ServiceData.User)
  SharedDtor();
}

void User::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete last_update_;
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fdata_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceData.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && last_update_ != NULL) {
    delete last_update_;
  }
  last_update_ = NULL;
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceData.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServiceData.User.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServiceData.Timestamp last_update = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceData.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceData.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceData.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.User.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // .ServiceData.Timestamp last_update = 2;
  if (this->has_last_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_last_update(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceData.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceData.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.User.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // .ServiceData.Timestamp last_update = 2;
  if (this->has_last_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_last_update(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceData.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceData.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // .ServiceData.Timestamp last_update = 2;
  if (this->has_last_update()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_update_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceData.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceData.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceData.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceData.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_last_update()) {
    mutable_last_update()->::ServiceData::Timestamp::MergeFrom(from.last_update());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceData.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceData.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(last_update_, other->last_update_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserFollowingList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserFollowingList::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserFollowingList::UserFollowingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fdata_2eproto::scc_info_UserFollowingList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceData.UserFollowingList)
}
UserFollowingList::UserFollowingList(const UserFollowingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      username_(from.username_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServiceData.UserFollowingList)
}

void UserFollowingList::SharedCtor() {
}

UserFollowingList::~UserFollowingList() {
  // @@protoc_insertion_point(destructor:ServiceData.UserFollowingList)
  SharedDtor();
}

void UserFollowingList::SharedDtor() {
}

void UserFollowingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserFollowingList::descriptor() {
  ::protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserFollowingList& UserFollowingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fdata_2eproto::scc_info_UserFollowingList.base);
  return *internal_default_instance();
}


void UserFollowingList::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceData.UserFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.Clear();
  _internal_metadata_.Clear();
}

bool UserFollowingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceData.UserFollowingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username(this->username_size() - 1).data(),
            static_cast<int>(this->username(this->username_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServiceData.UserFollowingList.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceData.UserFollowingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceData.UserFollowingList)
  return false;
#undef DO_
}

void UserFollowingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceData.UserFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string username = 1;
  for (int i = 0, n = this->username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username(i).data(), static_cast<int>(this->username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.UserFollowingList.username");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->username(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceData.UserFollowingList)
}

::google::protobuf::uint8* UserFollowingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceData.UserFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string username = 1;
  for (int i = 0, n = this->username_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username(i).data(), static_cast<int>(this->username(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.UserFollowingList.username");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->username(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceData.UserFollowingList)
  return target;
}

size_t UserFollowingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceData.UserFollowingList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string username = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->username_size());
  for (int i = 0, n = this->username_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->username(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserFollowingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceData.UserFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserFollowingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserFollowingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceData.UserFollowingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceData.UserFollowingList)
    MergeFrom(*source);
  }
}

void UserFollowingList::MergeFrom(const UserFollowingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceData.UserFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  username_.MergeFrom(from.username_);
}

void UserFollowingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceData.UserFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserFollowingList::CopyFrom(const UserFollowingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceData.UserFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserFollowingList::IsInitialized() const {
  return true;
}

void UserFollowingList::Swap(UserFollowingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserFollowingList::InternalSwap(UserFollowingList* other) {
  using std::swap;
  username_.InternalSwap(CastToBase(&other->username_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserFollowingList::GetMetadata() const {
  protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserChirpList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserChirpList::kChirpIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserChirpList::UserChirpList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fdata_2eproto::scc_info_UserChirpList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceData.UserChirpList)
}
UserChirpList::UserChirpList(const UserChirpList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chirp_id_(from.chirp_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServiceData.UserChirpList)
}

void UserChirpList::SharedCtor() {
}

UserChirpList::~UserChirpList() {
  // @@protoc_insertion_point(destructor:ServiceData.UserChirpList)
  SharedDtor();
}

void UserChirpList::SharedDtor() {
}

void UserChirpList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserChirpList::descriptor() {
  ::protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserChirpList& UserChirpList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fdata_2eproto::scc_info_UserChirpList.base);
  return *internal_default_instance();
}


void UserChirpList::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceData.UserChirpList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chirp_id_.Clear();
  _internal_metadata_.Clear();
}

bool UserChirpList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceData.UserChirpList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 chirp_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_chirp_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_chirp_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceData.UserChirpList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceData.UserChirpList)
  return false;
#undef DO_
}

void UserChirpList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceData.UserChirpList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 chirp_id = 1;
  if (this->chirp_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _chirp_id_cached_byte_size_));
  }
  for (int i = 0, n = this->chirp_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->chirp_id(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceData.UserChirpList)
}

::google::protobuf::uint8* UserChirpList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceData.UserChirpList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 chirp_id = 1;
  if (this->chirp_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _chirp_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->chirp_id_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceData.UserChirpList)
  return target;
}

size_t UserChirpList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceData.UserChirpList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 chirp_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->chirp_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chirp_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserChirpList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceData.UserChirpList)
  GOOGLE_DCHECK_NE(&from, this);
  const UserChirpList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserChirpList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceData.UserChirpList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceData.UserChirpList)
    MergeFrom(*source);
  }
}

void UserChirpList::MergeFrom(const UserChirpList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceData.UserChirpList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chirp_id_.MergeFrom(from.chirp_id_);
}

void UserChirpList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceData.UserChirpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserChirpList::CopyFrom(const UserChirpList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceData.UserChirpList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserChirpList::IsInitialized() const {
  return true;
}

void UserChirpList::Swap(UserChirpList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserChirpList::InternalSwap(UserChirpList* other) {
  using std::swap;
  chirp_id_.InternalSwap(&other->chirp_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserChirpList::GetMetadata() const {
  protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Chirp::InitAsDefaultInstance() {
  ::ServiceData::_Chirp_default_instance_._instance.get_mutable()->time_ = const_cast< ::ServiceData::Timestamp*>(
      ::ServiceData::Timestamp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Chirp::kIdFieldNumber;
const int Chirp::kUsernameFieldNumber;
const int Chirp::kParentIdFieldNumber;
const int Chirp::kTextFieldNumber;
const int Chirp::kTimeFieldNumber;
const int Chirp::kChildrenIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Chirp::Chirp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fdata_2eproto::scc_info_Chirp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceData.Chirp)
}
Chirp::Chirp(const Chirp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      children_ids_(from.children_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_time()) {
    time_ = new ::ServiceData::Timestamp(*from.time_);
  } else {
    time_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&parent_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(parent_id_));
  // @@protoc_insertion_point(copy_constructor:ServiceData.Chirp)
}

void Chirp::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_id_) -
      reinterpret_cast<char*>(&time_)) + sizeof(parent_id_));
}

Chirp::~Chirp() {
  // @@protoc_insertion_point(destructor:ServiceData.Chirp)
  SharedDtor();
}

void Chirp::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_;
}

void Chirp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Chirp::descriptor() {
  ::protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Chirp& Chirp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fdata_2eproto::scc_info_Chirp.base);
  return *internal_default_instance();
}


void Chirp::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceData.Chirp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_ids_.Clear();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(parent_id_));
  _internal_metadata_.Clear();
}

bool Chirp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceData.Chirp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServiceData.Chirp.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 parent_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServiceData.Chirp.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ServiceData.Timestamp time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 children_ids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_children_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 50u, input, this->mutable_children_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceData.Chirp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceData.Chirp)
  return false;
#undef DO_
}

void Chirp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceData.Chirp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.Chirp.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // uint64 parent_id = 3;
  if (this->parent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->parent_id(), output);
  }

  // string text = 4;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.Chirp.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->text(), output);
  }

  // .ServiceData.Timestamp time = 5;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_time(), output);
  }

  // repeated uint64 children_ids = 6;
  if (this->children_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _children_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->children_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->children_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceData.Chirp)
}

::google::protobuf::uint8* Chirp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceData.Chirp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.Chirp.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // uint64 parent_id = 3;
  if (this->parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->parent_id(), target);
  }

  // string text = 4;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServiceData.Chirp.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->text(), target);
  }

  // .ServiceData.Timestamp time = 5;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_time(), deterministic, target);
  }

  // repeated uint64 children_ids = 6;
  if (this->children_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _children_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->children_ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceData.Chirp)
  return target;
}

size_t Chirp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceData.Chirp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 children_ids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->children_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _children_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string text = 4;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .ServiceData.Timestamp time = 5;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 parent_id = 3;
  if (this->parent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->parent_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chirp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceData.Chirp)
  GOOGLE_DCHECK_NE(&from, this);
  const Chirp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Chirp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceData.Chirp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceData.Chirp)
    MergeFrom(*source);
  }
}

void Chirp::MergeFrom(const Chirp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceData.Chirp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_ids_.MergeFrom(from.children_ids_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_time()) {
    mutable_time()->::ServiceData::Timestamp::MergeFrom(from.time());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.parent_id() != 0) {
    set_parent_id(from.parent_id());
  }
}

void Chirp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceData.Chirp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chirp::CopyFrom(const Chirp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceData.Chirp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chirp::IsInitialized() const {
  return true;
}

void Chirp::Swap(Chirp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Chirp::InternalSwap(Chirp* other) {
  using std::swap;
  children_ids_.InternalSwap(&other->children_ids_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(id_, other->id_);
  swap(parent_id_, other->parent_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Chirp::GetMetadata() const {
  protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NowChirpId::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NowChirpId::kNowIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NowChirpId::NowChirpId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_service_5fdata_2eproto::scc_info_NowChirpId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServiceData.NowChirpId)
}
NowChirpId::NowChirpId(const NowChirpId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  now_id_ = from.now_id_;
  // @@protoc_insertion_point(copy_constructor:ServiceData.NowChirpId)
}

void NowChirpId::SharedCtor() {
  now_id_ = GOOGLE_ULONGLONG(0);
}

NowChirpId::~NowChirpId() {
  // @@protoc_insertion_point(destructor:ServiceData.NowChirpId)
  SharedDtor();
}

void NowChirpId::SharedDtor() {
}

void NowChirpId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NowChirpId::descriptor() {
  ::protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NowChirpId& NowChirpId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_service_5fdata_2eproto::scc_info_NowChirpId.base);
  return *internal_default_instance();
}


void NowChirpId::Clear() {
// @@protoc_insertion_point(message_clear_start:ServiceData.NowChirpId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  now_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool NowChirpId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServiceData.NowChirpId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 now_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &now_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServiceData.NowChirpId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServiceData.NowChirpId)
  return false;
#undef DO_
}

void NowChirpId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServiceData.NowChirpId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 now_id = 1;
  if (this->now_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->now_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServiceData.NowChirpId)
}

::google::protobuf::uint8* NowChirpId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServiceData.NowChirpId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 now_id = 1;
  if (this->now_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->now_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServiceData.NowChirpId)
  return target;
}

size_t NowChirpId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServiceData.NowChirpId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 now_id = 1;
  if (this->now_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->now_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NowChirpId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServiceData.NowChirpId)
  GOOGLE_DCHECK_NE(&from, this);
  const NowChirpId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NowChirpId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServiceData.NowChirpId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServiceData.NowChirpId)
    MergeFrom(*source);
  }
}

void NowChirpId::MergeFrom(const NowChirpId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServiceData.NowChirpId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.now_id() != 0) {
    set_now_id(from.now_id());
  }
}

void NowChirpId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServiceData.NowChirpId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NowChirpId::CopyFrom(const NowChirpId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServiceData.NowChirpId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NowChirpId::IsInitialized() const {
  return true;
}

void NowChirpId::Swap(NowChirpId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NowChirpId::InternalSwap(NowChirpId* other) {
  using std::swap;
  swap(now_id_, other->now_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NowChirpId::GetMetadata() const {
  protobuf_service_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_service_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ServiceData
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceData::Timestamp* Arena::CreateMaybeMessage< ::ServiceData::Timestamp >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceData::Timestamp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceData::User* Arena::CreateMaybeMessage< ::ServiceData::User >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceData::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceData::UserFollowingList* Arena::CreateMaybeMessage< ::ServiceData::UserFollowingList >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceData::UserFollowingList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceData::UserChirpList* Arena::CreateMaybeMessage< ::ServiceData::UserChirpList >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceData::UserChirpList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceData::Chirp* Arena::CreateMaybeMessage< ::ServiceData::Chirp >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceData::Chirp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ServiceData::NowChirpId* Arena::CreateMaybeMessage< ::ServiceData::NowChirpId >(Arena* arena) {
  return Arena::CreateInternal< ::ServiceData::NowChirpId >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
